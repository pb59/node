export function startIQQuizLLM({ userInfo, scene, onComplete }) {
    const iqOverlay = document.getElementById('iqQuizOverlay');
    const iqQuestion = document.getElementById('iqQuestion');
    const iqAnswer = document.getElementById('iqAnswer');
    const iqNextBtn = document.getElementById('iqNextBtn');
    const iqError = document.getElementById('iqError');

    let iqQuestions = [];
    let currentIQIndex = 0;
    let iqScore = 0;

    iqOverlay.style.display = 'flex';
    iqQuestion.textContent = "Loading IQ questions from GitHub Copilot...";
    iqAnswer.value = '';
    iqError.style.display = 'none';

    fetch('/groq', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            model: 'llama3-8b-8192',
            messages: [
                { role: 'user', content: `Give me exactly 5 easy IQ questions suitable for a person aged ${userInfo.age}. Output ONLY the questions as a numbered list, no introduction, no explanations, no answers, no extra text.` }
            ]
        })
    })
    .then(res => res.json())
    .then(data => {
        const lines = data.choices[0].message.content.trim().split('\n').filter(l => l.trim());
        iqQuestions = lines.map(l => l.replace(/^\d+\.\s*/, '').trim());
        currentIQIndex = 0;
        iqScore = 0;
        showNextIQQuestion();
    })
    .catch(err => {
        iqQuestions = [
            "What is the next number in the sequence: 1, 2, 4, 8, ?",
            "If you have 3 apples and take away 2, how many do you have?",
            "Which is heavier: 1kg of feathers or 1kg of iron?",
            "What comes next: Sun, Mon, Tue, ?",
            "If a train leaves at 3PM and arrives at 5PM, how long was the trip?"
        ];
        currentIQIndex = 0;
        iqScore = 0;
        showNextIQQuestion();
        console.error("LLM error:", err);
    });

    function showNextIQQuestion() {
        if (currentIQIndex < iqQuestions.length) {
            iqQuestion.textContent = iqQuestions[currentIQIndex] + " (Generated by GitHub Copilot)";
            iqAnswer.value = '';
            iqError.style.display = 'none';
        } else {
            finishIQQuiz();
        }
    }

    iqNextBtn.onclick = function() {
        fetch('/groq', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                model: 'llama3-8b-8192',
                messages: [
                    { role: 'user', content: `Is the answer to "${iqQuestions[currentIQIndex]}" equal to "${iqAnswer.value}"? Reply only "yes" or "no".` }
                ]
            })
        })
        .then(res => res.json())
        .then(data => {
            const reply = data.choices[0].message.content.trim().toLowerCase();
            if (reply.startsWith('yes')) {
                iqScore += 1;
            }
            currentIQIndex += 1;
            showNextIQQuestion();
        })
        .catch(err => {
            iqError.textContent = "Could not check answer (GitHub Copilot error).";
            iqError.style.display = 'block';
            console.error("LLM error:", err);
        });
    };

    function finishIQQuiz() {
        iqOverlay.style.display = 'none';
        if (onComplete) onComplete(iqScore, iqQuestions.length);
    }
}