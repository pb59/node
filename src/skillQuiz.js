export function startSkillQuizLLM({ userInfo, scene, onComplete }) {
    const iqOverlay = document.getElementById('iqQuizOverlay');
    const iqQuestion = document.getElementById('iqQuestion');
    const iqAnswer = document.getElementById('iqAnswer');
    const iqNextBtn = document.getElementById('iqNextBtn');
    const iqError = document.getElementById('iqError');

    let skillQuestions = [];
    let currentSkillIndex = 0;
    let skillScore = 0;

    iqOverlay.style.display = 'flex';
    iqQuestion.textContent = `Loading ${userInfo.skill} questions from GitHub Copilot...`;
    iqAnswer.value = '';
    iqError.style.display = 'none';

    fetch('/groq', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            model: 'llama3-8b-8192',
            messages: [
                { role: 'user', content: `Give me exactly 5 simple quiz questions about "${userInfo.skill}" suitable for a person aged ${userInfo.age}. Output ONLY the questions as a numbered list, no introduction, no explanations, no answers, no extra text.` }
            ]
        })
    })
    .then(res => res.json())
    .then(data => {
        const lines = data.choices[0].message.content.trim().split('\n').filter(l => l.trim());
        skillQuestions = lines.map(l => l.replace(/^\d+\.\s*/, '').trim());
        currentSkillIndex = 0;
        skillScore = 0;
        showNextSkillQuestion();
    })
    .catch(err => {
        skillQuestions = [
            `What is one important thing to know about ${userInfo.skill}?`,
            `Name a common use for ${userInfo.skill}.`,
            `Why is ${userInfo.skill} useful?`,
            `Give an example related to ${userInfo.skill}.`,
            `How can someone improve at ${userInfo.skill}?`
        ];
        currentSkillIndex = 0;
        skillScore = 0;
        showNextSkillQuestion();
        console.error("LLM error:", err);
    });

    function showNextSkillQuestion() {
        if (currentSkillIndex < skillQuestions.length) {
            iqQuestion.textContent = skillQuestions[currentSkillIndex] + " (Generated by GitHub Copilot)";
            iqAnswer.value = '';
            iqError.style.display = 'none';
            iqNextBtn.disabled = false;
            iqNextBtn.style.display = '';
            iqAnswer.focus();
        } else {
            finishSkillQuiz();
        }
    }

    iqNextBtn.onclick = null;
    iqNextBtn.onclick = function() {
        if (iqNextBtn.disabled) return;
        iqNextBtn.disabled = true;
        iqError.style.display = 'none';
        if (!iqAnswer.value.trim()) {
            iqError.textContent = "Please enter an answer.";
            iqError.style.display = 'block';
            iqNextBtn.disabled = false;
            return;
        }
        fetch('/groq', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                model: 'llama3-8b-8192',
                messages: [
                    { role: 'user', content: `Is the answer to "${skillQuestions[currentSkillIndex]}" about "${userInfo.skill}" correct if the answer is "${iqAnswer.value}"? Reply only "yes" or "no".` }
                ]
            })
        })
        .then(res => res.json())
        .then(data => {
            const reply = data.choices[0].message.content.trim().toLowerCase();
            if (reply.startsWith('yes')) {
                skillScore += 1;
            }
            currentSkillIndex += 1;
            showNextSkillQuestion();
        })
        .catch(err => {
            iqError.textContent = "Could not check answer (GitHub Copilot error).";
            iqError.style.display = 'block';
            iqNextBtn.disabled = false;
            console.error("LLM error:", err);
        });
    };

    iqAnswer.onkeydown = function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            iqNextBtn.click();
        }
    };

    function finishSkillQuiz() {
        iqOverlay.style.display = 'none';
        iqNextBtn.disabled = true;
        iqNextBtn.style.display = 'none';
        document.getElementById('startBtn').style.display = '';
        if (onComplete) onComplete(skillScore, skillQuestions.length);
    }
}