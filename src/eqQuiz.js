export function startEQQuizLLM({ userInfo, scene, onComplete }) {
    const iqOverlay = document.getElementById('iqQuizOverlay');
    const iqQuestion = document.getElementById('iqQuestion');
    const iqAnswer = document.getElementById('iqAnswer');
    const iqNextBtn = document.getElementById('iqNextBtn');
    const iqError = document.getElementById('iqError');

    let eqQuestions = [];
    let currentEQIndex = 0;
    let eqScore = 0;

    iqOverlay.style.display = 'flex';
    iqQuestion.textContent = "Loading EQ questions from GitHub Copilot...";
    iqAnswer.value = '';
    iqError.style.display = 'none';

    fetch('/groq', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            model: 'llama3-8b-8192',
            messages: [
                { role: 'user', content: `Give me exactly 5 simple EQ (emotional intelligence) questions suitable for a person aged ${userInfo.age}. Output ONLY the questions as a numbered list, no introduction, no explanations, no answers, no extra text.` }
            ]
        })
    })
    .then(res => res.json())
    .then(data => {
        const lines = data.choices[0].message.content.trim().split('\n').filter(l => l.trim());
        eqQuestions = lines.map(l => l.replace(/^\d+\.\s*/, '').trim());
        currentEQIndex = 0;
        eqScore = 0;
        showNextEQQuestion();
    })
    .catch(err => {
        eqQuestions = [
            "How would you comfort a friend who is sad?",
            "If you feel angry, what is a good way to calm down?",
            "What should you do if you see someone being left out?",
            "How can you show someone you appreciate them?",
            "If you make a mistake, what should you do next?"
        ];
        currentEQIndex = 0;
        eqScore = 0;
        showNextEQQuestion();
        console.error("LLM error:", err);
    });

    function showNextEQQuestion() {
        if (currentEQIndex < eqQuestions.length) {
            iqQuestion.textContent = eqQuestions[currentEQIndex] + " (Generated by GitHub Copilot)";
            iqAnswer.value = '';
            iqError.style.display = 'none';
            iqNextBtn.disabled = false;
            iqNextBtn.style.display = '';
            iqAnswer.focus();
        } else {
            finishEQQuiz();
        }
    }

    iqNextBtn.onclick = null;
    iqNextBtn.onclick = function() {
        if (iqNextBtn.disabled) return;
        iqNextBtn.disabled = true;
        iqError.style.display = 'none';
        if (!iqAnswer.value.trim()) {
            iqError.textContent = "Please enter an answer.";
            iqError.style.display = 'block';
            iqNextBtn.disabled = false;
            return;
        }
        fetch('/groq', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                model: 'llama3-8b-8192',
                messages: [
                    { role: 'user', content: `Is the answer to "${eqQuestions[currentEQIndex]}" a good emotionally intelligent response if the answer is "${iqAnswer.value}"? Reply only "yes" or "no".` }
                ]
            })
        })
        .then(res => res.json())
        .then(data => {
            const reply = data.choices[0].message.content.trim().toLowerCase();
            if (reply.startsWith('yes')) {
                eqScore += 1;
            }
            currentEQIndex += 1;
            showNextEQQuestion();
        })
        .catch(err => {
            iqError.textContent = "Could not check answer (GitHub Copilot error).";
            iqError.style.display = 'block';
            iqNextBtn.disabled = false;
            console.error("LLM error:", err);
        });
    };

    iqAnswer.onkeydown = function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            iqNextBtn.click();
        }
    };

    function finishEQQuiz() {
        iqOverlay.style.display = 'none';
        iqNextBtn.disabled = true;
        iqNextBtn.style.display = 'none';
        document.getElementById('startBtn').style.display = '';
        if (onComplete) onComplete(eqScore, eqQuestions.length);
    }
}
